{
	"author": ["Peter Pirkelbauer", "Damian Dechev", "Bjarne Stroustrup"],
	"back": "SLE-2010",
	"booktitle": "Revised Selected Papers of the Third International Conference on Software Language Engineering",
	"booktitleshort": "SLE",
	"crossref": "conf/sle/2010",
	"dblpkey": "conf/sle/PirkelbauerDS10",
	"doi": "10.1007/978-3-642-19440-5_8",
	"editor": ["Brian A. Malloy", "Steffen Staab", "Mark van den Brand"],
	"ee": "http://dx.doi.org/10.1007/978-3-642-19440-5_8",
	"isbn": "978-3-642-19439-9",
	"pages": "123-142",
	"past": [
		"1. Abrahams, D., Gurtovoy, A.: C++ Template Metaprogramming: Concepts, Tools, and Techniques from Boost and Beyond (C++ in Depth Series). Addison-Wesley Professional, Reading (2004)",
		"2. Agesen, O., Palsberg, J., Schwartzbach, M.: Type inference of SELF. In: Wang, J. (ed.) ECOOP 1993. LNCS, vol. 707, pp. 247–267. Springer, Heidelberg (1993)",
		"3. Alexandrescu, A.: Modern C++ design: generic programming and design patterns applied. Addison-Wesley Longman Publishing Co., Inc., Boston (2001)",
		"4. An, P., Jula, A., Rus, S., Saunders, S., Smith, T., Tanase, G., Thomas, N., Am- ato, N., Rauchwerger, L.: STAPL: A standard template adaptive parallel C++ library. In: Dietz, H.G. (ed.) LCPC 2001. LNCS, vol. 2624, pp. 193–208. Springer, Heidelberg (2003)",
		"5. Austern, M.H.: Generic programming and the STL: using and extending the C++ Standard Template Library. Addison-Wesley Longman Publishing Co., Inc., Boston (1998)",
		"6. Becker, P.: The C++ Standard Library Extensions: A Tutorial and Reference, 1st edn. Addison-Wesley Professional, Boston (2006)",
		"7. Becker, P.: Working draft, standard for programming language C++. Tech. Rep. N2914 (June 2009)",
		"8. Damas, L., Milner, R.: Principal type-schemes for functional programs. In: POPL 1982: Proceedings of the 9th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, pp. 207–212. ACM, New York (1982)",
		"9. Dos Reis, G., Stroustrup, B.: A C++ formalism. Tech. Rep. N1885, JTC1/SC22/WG21 C++ Standards Committee (2005)",
		"10. Dos Reis, G., Stroustrup, B.: Specifying C++ concepts. In: POPL 2006: Confer- ence Record of the 33rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, pp. 295–308. ACM Press, New York (2006)",
		"11. Dos Reis, G., Stroustrup, B.: A principled, complete, and efficient representation of C++. In: Suzuki, M., Hong, H., Anai, H., Yap, C., Sato, Y., Yoshida, H. (eds.) The Joint Conference of ASCM 2009 and MACIS 2009, COE, Fukuoka, Japan. MI Lecture Note Series, vol. 22, pp. 151–166 (December 2009)",
		"12. Dos Reis, G., Stroustrup, B., Meredith, A.: Axioms: Semantics aspects of C++ concepts. Tech. Rep. N2887, JTC1/SC22/WG21 C++ Standards Committee (June 2009) 142 P. Pirkelbauer, D. Dechev, and B. Stroustrup",
		"13. Gregor, D., J¨ arvi, J., Siek, J., Stroustrup, B., Dos Reis, G., Lumsdaine, A.: Con- cepts: linguistic support for generic programming in C++. In: OOPSLA 2006: Proceedings of the 21st Annual ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages, and Applications, pp. 291–310. ACM Press, New York (2006)",
		"14. Gregor, D., Stroustrup, B., Siek, J., Widman, J.: Proposed wording for concepts (revision 4). Tech. Rep. N2501, JTC1/SC22/WG21 C++ Standards Committee (February 2008)",
		"15. ISO/IEC 14882 International Standard: Programming languages: C++. American National Standards Institute (September 1998)",
		"16. J¨ arvi, J., Gregor, D., Willcock, J., Lumsdaine, A., Siek, J.: Algorithm specialization in generic programming: challenges of constrained generics in C++. In: PLDI 2006: Proceedings of the 2006 ACM SIGPLAN Conference on Programming Language Design and Implementation, pp. 272–282. ACM, New York (2006)",
		"17. J¨ arvi, J., Marcus, M.A., Smith, J.N.: Library composition and adaptation using C++ concepts. In: GPCE 2007: Proceedings of the 6th International Conference on Generative Programming and Component Engineering, pp. 73–82. ACM Press, New York (2007)",
		"18. J¨ arvi, J., Willcock, J., Hinnant, H., Lumsdaine, A.: Function overloading based on arbitrary properties of types. C/C++ Users Journal 21(6), 25–32 (2003)",
		"19. Peterson, J., Jones, M.: Implementing type classes. In: PLDI 1993: Proceedings of the ACM SIGPLAN 1993 Conference on Programming Language Design and Implementation, pp. 227–236. ACM Press, New York (1993)",
		"20. Siek, J., Lumsdaine, A.: Concept checking: Binding parametric polymorphism in C++. In: First Workshop on C++ Template Programming, Erfurt, Germany, Oc- tober 10 (2000)",
		"21. Siek, J.G., Lee, L.Q., Lumsdaine, A.: The Boost Graph Library: user guide and reference manual. Addison-Wesley Longman Publishing Co., Inc., Boston (2002)",
		"22. Stepanov, A., McJones, P.: Elements of Programming. Addison-Wesley Profes- sional, Reading (2009)",
		"23. Stroustrup, B.: The design and evolution of C++. ACM Press/Addison-Wesley Publishing Co, New York, NY, USA (1994)",
		"24. Stroustrup, B.: The C++ Programming Language. Addison-Wesley Longman Pub- lishing Co., Inc., Boston (2000)",
		"25. Stroustrup, B.: Abstraction and the C++ machine model. In: Wu, Z., Chen, C., Guo, M., Bu, J. (eds.) ICESS 2004. LNCS, vol. 3605, pp. 1–13. Springer, Heidelberg (2005)",
		"26. Stroustrup, B.: The C++0x “remove concept” decision. Dr. Dobb’s Journal 92 (August 2009) (republished with permission in Overload Journal July 2009)",
		"27. Stroustrup, B.: Expounds on concepts and the future of C++. Interview with Danny Kalev (August 2009)",
		"28. Sutton, A., Maletic, J.I.: Automatically identifying C++0x concepts in function templates. In: ICSM 2008: 24th IEEE International Conference on Software Main- tenance, Beijing, China, pp. 57–66. IEEE, Los Alamitos (2008)",
		"29. Wadler, P., Blott, S.: How to make ad-hoc polymorphism less ad hoc. In: POPL 1989: Proceedings of the 16th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, pp. 60–76. ACM, New York (1989)"
	],
	"publisher": "Springer International Publishing",
	"publishershort": "Springer",
	"series": "Lecture Notes in Computer Science",
	"seriesshort": "LNCS",
	"stemmed": ["support", "for", "the", "evolut", "of", "c", "generic", "function"],
	"tag": ["c++", "evolution"],
	"title": "Support for the Evolution of C++ Generic Functions",
	"type": "inproceedings",
	"venue": "SLE",
	"volume": 6563,
	"year": 2010
}